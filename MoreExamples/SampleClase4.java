// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/SampleClase4.gold"
import gold.structures.automaton.*;
import gold.util.*;
import gold.visualization.automaton.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class SampleClase4 {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=13;
      GAutomataFrame.show($cast(gold.structures.automaton.IAutomaton.class,SampleClase4.createAutomaton()));
      $line=14;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,SampleClase4.createAutomaton()));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,SampleClase4.class,"main",$line);
    }
  }
  public static IAutomaton createAutomaton() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=19;
      Object Q=$fix(GCollections.asSet("par","impar"));
      $line=22;
      Object \u03A3=$fix(GCollections.asSet('a','b'));
      $line=25;
      Object q_0=$fix("par");
      $line=28;
      Object F=$fix(GCollections.asSet("impar"));
      $line=31;
      Object \u03B4=$fix(new Object[]{new Object[]{"par",'a',"impar"},new Object[]{"par",'b',"par"},new Object[]{"impar",'a',"par"},new Object[]{"impar",'b',"impar"}});
      $line=37;
      $result=$invokeConstructor(GDeterministicAutomaton.class,new Object[]{Q,\u03A3,q_0,F,\u03B4});
      if (true) break $try;
      $line=38;
      $rethrow(new RuntimeException("The function \"createAutomaton()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,SampleClase4.class,"createAutomaton",$line);
    }
    return $cast(IAutomaton.class,$result);
  }
}
